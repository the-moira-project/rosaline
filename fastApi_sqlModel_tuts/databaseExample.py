from typing import Optional

from sqlmodel import Field, SQLModel, create_engine


class Hero(SQLModel, table=True):
    # id is optional because it generated by the db, not this code
    id: Optional[int] = Field(default=None, primary_key=True)
    name: str
    secret_name: str
    age: Optional[int] = None


# generate sqlite file name
sqlite_file_name = "database.db"
sqlite_url = f"sqlite:///{sqlite_file_name}"

# echo=true makes the engine print all the sql it executes
# take out echo in production
engine = create_engine(sqlite_url, echo=True)

# create db and table
# SQLModel.metadata.create_all(engine)


def create_db_and_tables():
    SQLModel.metadata.create_all(engine)


# run code when 'python databaseExample.py' is run in terminal
# code is not run via imports
if __name__ == "__main__":
    create_db_and_tables()

# separated files
# Create the models in one Python file models.py.
# Create the engine object in a file db.py.
# Create your main app and call SQLModel.metadata.create_all() in app.py
# must import correctly before calling SQLModel.metadata.create_all()
